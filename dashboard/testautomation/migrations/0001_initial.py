# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-06-06 18:23
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80)),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Last updated')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_create', to=settings.AUTH_USER_MODEL)),
                ('last_updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_update', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_id', models.IntegerField(editable=False)),
                ('test', models.CharField(max_length=80, verbose_name='Test Case')),
                ('script_name', models.CharField(max_length=200)),
                ('result', models.NullBooleanField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('total_duration', models.FloatField(null=True)),
                ('test_duration', models.FloatField(null=True)),
                ('test_machine_ip', models.CharField(blank=True, max_length=30, null=True, verbose_name='Test Machine IP')),
                ('browser', models.CharField(blank=True, max_length=30, null=True)),
                ('browser_ver', models.CharField(blank=True, max_length=30, null=True)),
                ('platform', models.CharField(blank=True, max_length=30, null=True)),
                ('platform_ver', models.CharField(blank=True, max_length=30, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('console_log', models.TextField(blank=True, null=True)),
                ('output', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='Start Time')),
                ('repeat', models.BooleanField(verbose_name='Repeat?')),
                ('recurrence_rule', models.IntegerField(choices=[(0, 'Repeat Daily'), (1, 'Repeat Weekly'), (2, 'Repeat Monthly')], default=0, verbose_name='Recurrence Pattern')),
                ('range', models.IntegerField(choices=[(0, 'No End Date'), (2, 'End date')], default=0, verbose_name='Range of Recurrence')),
                ('end_by', models.DateTimeField(blank=True, null=True, verbose_name='End By')),
                ('rrule_string', models.CharField(blank=True, max_length=255, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Last updated')),
                ('passed_previous_execution', models.NullBooleanField()),
                ('last_execution', models.DateTimeField(blank=True, null=True)),
                ('activated', models.BooleanField(verbose_name='Activated?')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule_create', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, to='testautomation.Group')),
                ('last_updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule_update', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80)),
                ('script', models.FileField(upload_to='scripts')),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_case_create', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, to='testautomation.Group')),
                ('last_updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_case_update', to=settings.AUTH_USER_MODEL)),
                ('schedules', models.ManyToManyField(blank=True, to='testautomation.Schedule')),
            ],
        ),
        migrations.CreateModel(
            name='TestMachine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=80)),
                ('ip', models.CharField(blank=True, max_length=80, null=True, verbose_name='IP')),
                ('url', models.CharField(blank=True, editable=False, max_length=80, null=True, verbose_name='URL')),
                ('uuid', models.CharField(blank=True, editable=False, max_length=80, null=True, verbose_name='UUID')),
                ('active', models.BooleanField(editable=False)),
                ('approved', models.BooleanField()),
                ('description', models.TextField(blank=True, null=True)),
                ('operating_system', models.CharField(blank=True, editable=False, max_length=30, null=True)),
                ('operating_system_ver', models.CharField(blank=True, editable=False, max_length=30, null=True)),
                ('chrome', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('firefox', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('internet_explorer', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('edge', models.CharField(blank=True, editable=False, max_length=255, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='schedule',
            name='test_cases',
            field=models.ManyToManyField(blank=True, to='testautomation.TestCase'),
        ),
        migrations.AddField(
            model_name='group',
            name='schedules',
            field=models.ManyToManyField(blank=True, to='testautomation.Schedule'),
        ),
        migrations.AddField(
            model_name='group',
            name='test_cases',
            field=models.ManyToManyField(blank=True, to='testautomation.TestCase'),
        ),
    ]
